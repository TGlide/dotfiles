-- Material You colorscheme for Neovim generated by matugen

local colors = {
	-- Base surfaces
	bg = "{{colors.surface.default.hex}}",
	bg_dim = "{{colors.surface_dim.default.hex}}",
	bg_bright = "{{colors.surface_bright.default.hex}}",

	-- Container surfaces (for UI elements)
	bg_container_lowest = "{{colors.surface_container_lowest.default.hex}}",
	bg_container_low = "{{colors.surface_container_low.default.hex}}",
	bg_container = "{{colors.surface_container.default.hex}}",
	bg_container_high = "{{colors.surface_container_high.default.hex}}",
	bg_container_highest = "{{colors.surface_container_highest.default.hex}}",

	-- Text colors
	fg = "{{colors.on_surface.default.hex}}",
	fg_variant = "{{colors.on_surface_variant.default.hex}}",

	-- Primary colors
	primary = "{{colors.primary.default.hex}}",
	on_primary = "{{colors.on_primary.default.hex}}",
	primary_container = "{{colors.primary_container.default.hex}}",
	on_primary_container = "{{colors.on_primary_container.default.hex}}",
	primary_fixed = "{{colors.primary_fixed.default.hex}}",
	primary_fixed_dim = "{{colors.primary_fixed_dim.default.hex}}",

	-- Secondary colors
	secondary = "{{colors.secondary.default.hex}}",
	on_secondary = "{{colors.on_secondary.default.hex}}",
	secondary_container = "{{colors.secondary_container.default.hex}}",
	on_secondary_container = "{{colors.on_secondary_container.default.hex}}",
	secondary_fixed = "{{colors.secondary_fixed.default.hex}}",
	secondary_fixed_dim = "{{colors.secondary_fixed_dim.default.hex}}",

	-- Tertiary colors
	tertiary = "{{colors.tertiary.default.hex}}",
	on_tertiary = "{{colors.on_tertiary.default.hex}}",
	tertiary_container = "{{colors.tertiary_container.default.hex}}",
	on_tertiary_container = "{{colors.on_tertiary_container.default.hex}}",
	tertiary_fixed = "{{colors.tertiary_fixed.default.hex}}",
	tertiary_fixed_dim = "{{colors.tertiary_fixed_dim.default.hex}}",

	-- Error colors
	error = "{{colors.error.default.hex}}",
	on_error = "{{colors.on_error.default.hex}}",
	error_container = "{{colors.error_container.default.hex}}",
	on_error_container = "{{colors.on_error_container.default.hex}}",

	-- Other UI elements
	outline = "{{colors.outline.default.hex}}",
	outline_variant = "{{colors.outline_variant.default.hex}}",
	shadow = "{{colors.shadow.default.hex}}",
	scrim = "{{colors.scrim.default.hex}}",

	-- Inverse colors
	inverse_surface = "{{colors.inverse_surface.default.hex}}",
	inverse_on_surface = "{{colors.inverse_on_surface.default.hex}}",
	inverse_primary = "{{colors.inverse_primary.default.hex}}",
}

-- Clear existing highlights
vim.cmd("highlight clear")
if vim.g.syntax_on then
	vim.cmd("syntax reset")
end

vim.g.colors_name = "material-you"
vim.o.termguicolors = true
vim.o.background = "dark" -- or "light" depending on your preference

-- UI elements
vim.api.nvim_set_hl(0, "Normal", { fg = colors.fg, bg = colors.bg })
vim.api.nvim_set_hl(0, "NormalFloat", { fg = colors.fg, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "NormalNC", { fg = colors.fg_variant, bg = colors.bg_dim })
vim.api.nvim_set_hl(0, "Cursor", { fg = colors.bg, bg = colors.primary })
vim.api.nvim_set_hl(0, "CursorLine", { bg = colors.bg_container_low })
vim.api.nvim_set_hl(0, "CursorColumn", { bg = colors.bg_container_low })
vim.api.nvim_set_hl(0, "ColorColumn", { bg = colors.bg_container })
vim.api.nvim_set_hl(0, "LineNr", { fg = colors.fg_variant })
vim.api.nvim_set_hl(0, "CursorLineNr", { fg = colors.primary, bold = true })
vim.api.nvim_set_hl(0, "SignColumn", { bg = colors.bg })
vim.api.nvim_set_hl(0, "VertSplit", { fg = colors.outline })
vim.api.nvim_set_hl(0, "StatusLine", { fg = colors.fg, bg = colors.bg_container_high })
vim.api.nvim_set_hl(0, "StatusLineNC", { fg = colors.fg_variant, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "Pmenu", { fg = colors.fg, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "PmenuSel", { fg = colors.on_primary, bg = colors.primary })
vim.api.nvim_set_hl(0, "PmenuSbar", { bg = colors.bg_container_high })
vim.api.nvim_set_hl(0, "PmenuThumb", { bg = colors.primary })
vim.api.nvim_set_hl(0, "Search", { fg = colors.on_secondary_container, bg = colors.secondary_container })
vim.api.nvim_set_hl(0, "IncSearch", { fg = colors.on_tertiary_container, bg = colors.tertiary_container })
vim.api.nvim_set_hl(0, "MatchParen", { fg = colors.tertiary, bold = true, underline = true })
vim.api.nvim_set_hl(0, "Visual", { bg = colors.primary_container })
vim.api.nvim_set_hl(0, "VisualNOS", { bg = colors.bg_container_high })
vim.api.nvim_set_hl(0, "Folded", { fg = colors.fg_variant, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "FoldColumn", { fg = colors.fg_variant, bg = colors.bg })
vim.api.nvim_set_hl(0, "DiffAdd", { fg = colors.tertiary, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "DiffChange", { fg = colors.secondary, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "DiffDelete", { fg = colors.error, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "DiffText", { fg = colors.primary, bg = colors.bg_container })
vim.api.nvim_set_hl(0, "Directory", { fg = colors.primary })
vim.api.nvim_set_hl(0, "ErrorMsg", { fg = colors.error })
vim.api.nvim_set_hl(0, "WarningMsg", { fg = colors.tertiary }) -- Using tertiary as warning
vim.api.nvim_set_hl(0, "ModeMsg", { fg = colors.fg, bold = true })
vim.api.nvim_set_hl(0, "MoreMsg", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Question", { fg = colors.primary })
vim.api.nvim_set_hl(0, "NonText", { fg = colors.fg_variant })
vim.api.nvim_set_hl(0, "SpecialKey", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Title", { fg = colors.primary, bold = true })
vim.api.nvim_set_hl(0, "WildMenu", { fg = colors.on_primary, bg = colors.primary })

-- Syntax highlighting
vim.api.nvim_set_hl(0, "Comment", { fg = colors.fg_variant, italic = true })
vim.api.nvim_set_hl(0, "Constant", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "String", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "Character", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "Number", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Boolean", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Float", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Identifier", { fg = colors.fg })
vim.api.nvim_set_hl(0, "Function", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Statement", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Conditional", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Repeat", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Label", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Operator", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Keyword", { fg = colors.primary })
vim.api.nvim_set_hl(0, "Exception", { fg = colors.error })
vim.api.nvim_set_hl(0, "PreProc", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Include", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Define", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Macro", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "PreCondit", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Type", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "StorageClass", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "Structure", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "Typedef", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "Special", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "SpecialChar", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Tag", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Delimiter", { fg = colors.fg })
vim.api.nvim_set_hl(0, "SpecialComment", { fg = colors.fg_variant, italic = true })
vim.api.nvim_set_hl(0, "Debug", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "Underlined", { fg = colors.primary, underline = true })
vim.api.nvim_set_hl(0, "Ignore", { fg = colors.fg_variant })
vim.api.nvim_set_hl(0, "Error", { fg = colors.error })
vim.api.nvim_set_hl(0, "Todo", { fg = colors.bg, bg = colors.tertiary, bold = true })

-- Diagnostics
vim.api.nvim_set_hl(0, "DiagnosticError", { fg = colors.error })
vim.api.nvim_set_hl(0, "DiagnosticWarn", { fg = colors.tertiary }) -- Using tertiary for warnings
vim.api.nvim_set_hl(0, "DiagnosticInfo", { fg = colors.secondary }) -- Using secondary for info
vim.api.nvim_set_hl(0, "DiagnosticHint", { fg = colors.primary })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineError", { undercurl = true, sp = colors.error })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineWarn", { undercurl = true, sp = colors.tertiary })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineInfo", { undercurl = true, sp = colors.secondary })
vim.api.nvim_set_hl(0, "DiagnosticUnderlineHint", { undercurl = true, sp = colors.primary })

-- Treesitter
vim.api.nvim_set_hl(0, "@variable", { fg = colors.fg })
vim.api.nvim_set_hl(0, "@function", { fg = colors.primary })
vim.api.nvim_set_hl(0, "@function.builtin", { fg = colors.primary })
vim.api.nvim_set_hl(0, "@keyword", { fg = colors.primary })
vim.api.nvim_set_hl(0, "@string", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "@number", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "@boolean", { fg = colors.tertiary })
vim.api.nvim_set_hl(0, "@type", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "@property", { fg = colors.fg })
vim.api.nvim_set_hl(0, "@field", { fg = colors.fg })
vim.api.nvim_set_hl(0, "@parameter", { fg = colors.fg, italic = true })
vim.api.nvim_set_hl(0, "@comment", { fg = colors.fg_variant, italic = true })
vim.api.nvim_set_hl(0, "@operator", { fg = colors.primary })
vim.api.nvim_set_hl(0, "@punctuation.delimiter", { fg = colors.fg })
vim.api.nvim_set_hl(0, "@punctuation.bracket", { fg = colors.fg })
vim.api.nvim_set_hl(0, "@tag", { fg = colors.primary })
vim.api.nvim_set_hl(0, "@tag.attribute", { fg = colors.secondary })
vim.api.nvim_set_hl(0, "@tag.delimiter", { fg = colors.fg })

-- LSP
vim.api.nvim_set_hl(0, "LspReferenceText", { bg = colors.bg_container_high })
vim.api.nvim_set_hl(0, "LspReferenceRead", { bg = colors.bg_container_high })
vim.api.nvim_set_hl(0, "LspReferenceWrite", { bg = colors.bg_container_high })

-- Return the colors table for use in other plugins
return colors
