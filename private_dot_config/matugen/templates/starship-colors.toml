"$schema" = 'https://starship.rs/config-schema.json'

format = """
$username\
$directory\
$git_branch\
$git_status\
$fill\
$c\
$elixir\
$elm\
$golang\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
$conda\
$python\
$time\n  \
[ó±žª](fg:tertiary) \
"""

palette = "colors"

[palettes.colors]
surface_container = '{{colors.surface_container.default.hex}}'
error = '{{colors.error.default.hex}}'
tertiary = '{{colors.tertiary.default.hex}}'
secondary = '{{colors.secondary.default.hex}}'
primary = '{{colors.primary.default.hex}}'
primary_fixed = '{{colors.primary_fixed.default.hex}}'
tertiary_fixed = '{{colors.tertiary_fixed.default.hex}}'
on_surface = '{{colors.on_surface.default.hex}}'

[directory]
format = "[î‚¶](fg:surface_container)[ $path ]($style)[î‚´](fg:surface_container) "
style = "bg:surface_container fg:primary"
truncation_length = 3
truncation_symbol = "â€¦/"

[directory.substitutions]
Documents = "ó°ˆ™"
Downloads = " "
Music = " "
Pictures = " "

[fill]
style = "fg:surface_container"
symbol = " "

[git_branch]
format = "[î‚¶](fg:surface_container)[ $symbol $branch ]($style)[î‚´](fg:surface_container) "
style = "bg:surface_container fg:primary_fixed"
symbol = ""

[git_status]
disabled = false
style = "bg:surface_container fg:error"
format = '[î‚¶](fg:surface_container)([$all_status$ahead_behind]($style))[î‚´](fg:surface_container) '
up_to_date = '[ âœ“ ](bg:surface_container fg:tertiary_fixed)'
untracked = '[?\($count\)](bg:surface_container fg:tertiary)'
stashed = '[\$](bg:surface_container fg:tertiary_fixed)'
modified = '[!\($count\)](bg:surface_container fg:tertiary)'
renamed = '[Â»\($count\)](bg:surface_container fg:tertiary_fixed)'
deleted = '[âœ˜\($count\)](style)'
staged = '[++\($count\)](bg:surface_container fg:tertiary)'
ahead = '[â‡¡\(${count}\)](bg:surface_container fg:primary_fixed)'
diverged = 'â‡•[\[](bg:surface_container fg:tertiary_fixed)[â‡¡\(${ahead_count}\)](bg:surface_container fg:primary_fixed)[â‡£\(${behind_count}\)](bg:surface_container fg:secondary)[\]](bg:surface_container fg:tertiary_fixed)'
behind = '[â‡£\(${count}\)](bg:surface_container fg:secondary)'

[time]
disabled = false
format = " [î‚¶](fg:surface_container)[ $time ó°´ˆ ]($style)[î‚´](fg:surface_container)"
style = "bg:surface_container fg:secondary"
time_format = "%I:%M%P"
use_12hr = true

[username]
disabled = false
format = "[î‚¶](fg:surface_container)[ ó°§± $user ]($style)[î‚´](fg:surface_container) "
show_always = true
style_root = "bg:surface_container fg:tertiary_fixed"
style_user = "bg:surface_container fg:tertiary_fixed"

# Languages

[c]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[elixir]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[elm]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[golang]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[haskell]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[java]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[julia]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[nodejs]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = "ó°Ž™ "

[nim]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = "ó°†¥ "

[rust]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[scala]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = " "

[python]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$version ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = ' '

[conda]
style = "bg:surface_container fg:primary"
format = " [î‚¶](fg:surface_container)[ $symbol$environment ]($style)[î‚´](fg:surface_container)"
disabled = false
symbol = 'ðŸ…’ '
